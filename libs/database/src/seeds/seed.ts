import { DataSource } from 'typeorm';
import { AppDataSource } from '../data-source';
import { userSeed } from './user.seed';
import { achievementSeed } from './achievement.seed';

/**
 * ============================================
 * MAIN SEED FILE
 * ============================================
 * File n√†y ch·∫°y t·∫•t c·∫£ c√°c seed theo th·ª© t·ª±
 * 
 * Th·ª© t·ª± quan tr·ªçng:
 * 1. user.seed - T·∫°o users (bao g·ªìm admin)
 * 2. achievement.seed - T·∫°o achievements (c·∫ßn admin user)
 */

async function runSeed() {
  console.log('\n' + '='.repeat(60));
  console.log('üå± STARTING DATABASE SEEDING');
  console.log('='.repeat(60) + '\n');

  let dataSource: DataSource;

  try {
    // ============================================
    // Connect to database
    // ============================================
    console.log('üì° Connecting to database...');
    dataSource = await AppDataSource.initialize();
    console.log('‚úÖ Database connected successfully!\n');

    // ============================================
    // Run seeds in order
    // ============================================
    
    // 1. User seed (includes roles, users, wallets)
    console.log('üë• Running USER seed...');
    try {
      await userSeed(dataSource);
      console.log('‚úÖ User seed completed!\n');
    } catch (error) {
      console.log('‚ö†Ô∏è  User seed skipped (users already exist)\n');
    }

    // 2. Achievement seed
    console.log('üèÜ Running ACHIEVEMENT seed...');
    await achievementSeed(dataSource);
    console.log('‚úÖ Achievement seed completed!\n');

    // ============================================
    // Success summary
    // ============================================
    console.log('='.repeat(60));
    console.log('üéâ ALL SEEDS COMPLETED SUCCESSFULLY!');
    console.log('='.repeat(60) + '\n');

  } catch (error) {
    // ============================================
    // Error handling
    // ============================================
    console.error('\n' + '='.repeat(60));
    console.error('‚ùå SEEDING FAILED!');
    console.error('='.repeat(60));
    console.error('\nError details:');
    console.error(error);
    console.error('\n' + '='.repeat(60) + '\n');
    process.exit(1);

  } finally {
    // ============================================
    // Cleanup: Close database connection
    // ============================================
    if (dataSource && dataSource.isInitialized) {
      console.log('üîå Closing database connection...');
      await dataSource.destroy();
      console.log('‚úÖ Database connection closed.\n');
    }
  }
}

// ============================================
// Execute seed
// ============================================
runSeed();

